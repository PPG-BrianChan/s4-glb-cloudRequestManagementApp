{
  "openapi": "3.0.2",
  "info": {
    "title": "Service for namespace main",
    "description": "This service is located at [/odata/v4/main/](/odata/v4/main/)",
    "version": ""
  },
  "x-sap-api-type": "ODATAV4",
  "x-odata-version": "4.0",
  "x-sap-shortText": "Service for namespace main",
  "servers": [
    {
      "url": "/odata/v4/main"
    }
  ],
  "tags": [
    {
      "name": "btpUser"
    },
    {
      "name": "incident"
    },
    {
      "name": "status"
    },
    {
      "name": "subaccount"
    },
    {
      "name": "ticketType"
    }
  ],
  "paths": {
    "/$batch": {
      "post": {
        "summary": "Send a group of requests",
        "description": "Group multiple requests into a single request payload, see [Batch Requests](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_BatchRequests).\n\n*Please note that \"Try it out\" is not supported for this request.*",
        "tags": [
          "Batch Requests"
        ],
        "requestBody": {
          "required": true,
          "description": "Batch request",
          "content": {
            "multipart/mixed;boundary=request-separator": {
              "schema": {
                "type": "string"
              },
              "example": "--request-separator\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nGET incident HTTP/1.1\nAccept: application/json\n\n\n--request-separator--"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Batch response",
            "content": {
              "multipart/mixed": {
                "schema": {
                  "type": "string"
                },
                "example": "--response-separator\nContent-Type: application/http\n\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n{...}\n--response-separator--"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/btpUser": {
      "get": {
        "summary": "Retrieve a list of btp user.",
        "tags": [
          "btpUser"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "email desc",
                  "fullName",
                  "fullName desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "fullName"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved btp user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of btpUser",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/main.btpUser"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single btp user.",
        "tags": [
          "btpUser"
        ],
        "requestBody": {
          "description": "New btp user",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/main.btpUser-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created btp user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/main.btpUser"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/btpUser('{email}')": {
      "parameters": [
        {
          "description": "key: email",
          "in": "path",
          "name": "email",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single btp user.",
        "tags": [
          "btpUser"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "fullName"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved btp user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/main.btpUser"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single btp user.",
        "tags": [
          "btpUser"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/main.btpUser-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single btp user.",
        "tags": [
          "btpUser"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/incident": {
      "get": {
        "summary": "Retrieve a list of incident.",
        "tags": [
          "incident"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "ticketNo",
                  "ticketNo desc",
                  "ticketType_code",
                  "ticketType_code desc",
                  "approverid",
                  "approverid desc",
                  "status_code",
                  "status_code desc",
                  "subaccount",
                  "subaccount desc",
                  "space",
                  "space desc",
                  "targetid_email",
                  "targetid_email desc",
                  "note",
                  "note desc",
                  "system",
                  "system desc",
                  "client",
                  "client desc",
                  "btpHidden",
                  "btpHidden desc",
                  "fioriHidden",
                  "fioriHidden desc",
                  "IsActiveEntity",
                  "IsActiveEntity desc",
                  "HasActiveEntity",
                  "HasActiveEntity desc",
                  "HasDraftEntity",
                  "HasDraftEntity desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "ticketNo",
                  "ticketType_code",
                  "approverid",
                  "status_code",
                  "subaccount",
                  "space",
                  "targetid_email",
                  "note",
                  "system",
                  "client",
                  "btpHidden",
                  "fioriHidden",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "ticketType",
                  "status",
                  "targetid",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved incident",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of incident",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/main.incident"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single incident.",
        "tags": [
          "incident"
        ],
        "requestBody": {
          "description": "New incident",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/main.incident-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created incident",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/main.incident"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/incident(ID={ID},IsActiveEntity='{IsActiveEntity}')": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single incident.",
        "tags": [
          "incident"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "ticketNo",
                  "ticketType_code",
                  "approverid",
                  "status_code",
                  "subaccount",
                  "space",
                  "targetid_email",
                  "note",
                  "system",
                  "client",
                  "btpHidden",
                  "fioriHidden",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "ticketType",
                  "status",
                  "targetid",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved incident",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/main.incident"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single incident.",
        "tags": [
          "incident"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/main.incident-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single incident.",
        "tags": [
          "incident"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/incident(ID={ID},IsActiveEntity='{IsActiveEntity}')/DraftAdministrativeData": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve draft administrative data of a incident.",
        "tags": [
          "incident"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "DraftUUID",
                  "CreationDateTime",
                  "CreatedByUser",
                  "DraftIsCreatedByMe",
                  "LastChangeDateTime",
                  "LastChangedByUser",
                  "InProcessByUser",
                  "DraftIsProcessedByMe"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved draft administrative data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/main.DraftAdministrativeData"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change draft administrative data of a incident.",
        "tags": [
          "incident"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/main.DraftAdministrativeData-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete draft administrative data of a incident.",
        "tags": [
          "incident"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/incident(ID={ID},IsActiveEntity='{IsActiveEntity}')/SiblingEntity": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve sibling entity of a incident.",
        "tags": [
          "incident"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "ticketNo",
                  "ticketType_code",
                  "approverid",
                  "status_code",
                  "subaccount",
                  "space",
                  "targetid_email",
                  "note",
                  "system",
                  "client",
                  "btpHidden",
                  "fioriHidden",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "ticketType",
                  "status",
                  "targetid",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved sibling entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/main.incident"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/incident(ID={ID},IsActiveEntity='{IsActiveEntity}')/SiblingEntity/main.draftActivate": {
      "post": {
        "summary": "Invoke action draftActivate",
        "tags": [
          "incident"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/main.incident"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ]
      }
    },
    "/incident(ID={ID},IsActiveEntity='{IsActiveEntity}')/SiblingEntity/main.draftEdit": {
      "post": {
        "summary": "Invoke action draftEdit",
        "tags": [
          "incident"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/main.incident"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "PreserveChanges": {
                    "type": "boolean",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/incident(ID={ID},IsActiveEntity='{IsActiveEntity}')/SiblingEntity/main.draftPrepare": {
      "post": {
        "summary": "Invoke action draftPrepare",
        "tags": [
          "incident"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/main.incident"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SideEffectsQualifier": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/incident(ID={ID},IsActiveEntity='{IsActiveEntity}')/main.draftActivate": {
      "post": {
        "summary": "Invoke action draftActivate",
        "tags": [
          "incident"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/main.incident"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ]
      }
    },
    "/incident(ID={ID},IsActiveEntity='{IsActiveEntity}')/main.draftEdit": {
      "post": {
        "summary": "Invoke action draftEdit",
        "tags": [
          "incident"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/main.incident"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "PreserveChanges": {
                    "type": "boolean",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/incident(ID={ID},IsActiveEntity='{IsActiveEntity}')/main.draftPrepare": {
      "post": {
        "summary": "Invoke action draftPrepare",
        "tags": [
          "incident"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/main.incident"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SideEffectsQualifier": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/incident(ID={ID},IsActiveEntity='{IsActiveEntity}')/status": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve status of a incident.",
        "tags": [
          "incident",
          "status"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "code",
                  "description"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/main.status"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/incident(ID={ID},IsActiveEntity='{IsActiveEntity}')/targetid": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve targetid of a incident.",
        "tags": [
          "incident",
          "btpUser"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "fullName"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved targetid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/main.btpUser"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/incident(ID={ID},IsActiveEntity='{IsActiveEntity}')/ticketType": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve ticket type of a incident.",
        "tags": [
          "incident",
          "ticketType"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "code",
                  "description"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved ticket type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/main.ticketType"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/status": {
      "get": {
        "summary": "Retrieve a list of status.",
        "tags": [
          "status"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "code",
                  "code desc",
                  "description",
                  "description desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "code",
                  "description"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of status",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/main.status"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single status.",
        "tags": [
          "status"
        ],
        "requestBody": {
          "description": "New status",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/main.status-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/main.status"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/status('{code}')": {
      "parameters": [
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 1
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single status.",
        "tags": [
          "status"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "code",
                  "description"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/main.status"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single status.",
        "tags": [
          "status"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/main.status-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single status.",
        "tags": [
          "status"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/subaccount": {
      "get": {
        "summary": "Retrieve a list of subaccount.",
        "tags": [
          "subaccount"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "displayName",
                  "displayName desc",
                  "description",
                  "description desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "displayName",
                  "description"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved subaccount",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of subaccount",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/main.subaccount"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single subaccount.",
        "tags": [
          "subaccount"
        ],
        "requestBody": {
          "description": "New subaccount",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/main.subaccount-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created subaccount",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/main.subaccount"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/subaccount('{displayName}')": {
      "parameters": [
        {
          "description": "key: displayName",
          "in": "path",
          "name": "displayName",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single subaccount.",
        "tags": [
          "subaccount"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "displayName",
                  "description"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved subaccount",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/main.subaccount"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single subaccount.",
        "tags": [
          "subaccount"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/main.subaccount-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single subaccount.",
        "tags": [
          "subaccount"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/ticketType": {
      "get": {
        "summary": "Retrieve a list of ticket type.",
        "tags": [
          "ticketType"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "code",
                  "code desc",
                  "description",
                  "description desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "code",
                  "description"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved ticket type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of ticketType",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/main.ticketType"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single ticket type.",
        "tags": [
          "ticketType"
        ],
        "requestBody": {
          "description": "New ticket type",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/main.ticketType-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created ticket type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/main.ticketType"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/ticketType('{code}')": {
      "parameters": [
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 1
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single ticket type.",
        "tags": [
          "ticketType"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "code",
                  "description"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved ticket type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/main.ticketType"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single ticket type.",
        "tags": [
          "ticketType"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/main.ticketType-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single ticket type.",
        "tags": [
          "ticketType"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "main.DraftAdministrativeData": {
        "title": "DraftAdministrativeData",
        "type": "object",
        "properties": {
          "DraftUUID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "CreationDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "CreatedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsCreatedByMe": {
            "type": "boolean",
            "nullable": true
          },
          "LastChangeDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "LastChangedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "InProcessByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsProcessedByMe": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "main.DraftAdministrativeData-create": {
        "title": "DraftAdministrativeData (for create)",
        "type": "object",
        "properties": {
          "DraftUUID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "CreationDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "CreatedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsCreatedByMe": {
            "type": "boolean",
            "nullable": true
          },
          "LastChangeDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "LastChangedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "InProcessByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsProcessedByMe": {
            "type": "boolean",
            "nullable": true
          }
        },
        "required": [
          "DraftUUID"
        ]
      },
      "main.DraftAdministrativeData-update": {
        "title": "DraftAdministrativeData (for update)",
        "type": "object",
        "properties": {
          "CreationDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "CreatedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsCreatedByMe": {
            "type": "boolean",
            "nullable": true
          },
          "LastChangeDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "LastChangedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "InProcessByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsProcessedByMe": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "main.btpUser": {
        "title": "btpUser",
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "fullName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "main.btpUser-create": {
        "title": "btpUser (for create)",
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "fullName": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "email"
        ]
      },
      "main.btpUser-update": {
        "title": "btpUser (for update)",
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "main.incident": {
        "title": "incident",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true,
            "description": "{i18n>UserID.Description}"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true,
            "description": "{i18n>UserID.Description}"
          },
          "ticketNo": {
            "type": "string",
            "maxLength": 8,
            "nullable": true
          },
          "ticketType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/main.ticketType"
              }
            ],
            "nullable": true
          },
          "ticketType_code": {
            "type": "string",
            "maxLength": 1,
            "nullable": true
          },
          "approverid": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/main.status"
              }
            ],
            "nullable": true
          },
          "status_code": {
            "type": "string",
            "maxLength": 1,
            "nullable": true
          },
          "subaccount": {
            "type": "string",
            "nullable": true
          },
          "space": {
            "type": "string",
            "nullable": true
          },
          "targetid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/main.btpUser"
              }
            ],
            "nullable": true
          },
          "targetid_email": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "system": {
            "type": "string",
            "maxLength": 3,
            "nullable": true
          },
          "client": {
            "type": "string",
            "maxLength": 3,
            "nullable": true
          },
          "btpHidden": {
            "type": "boolean",
            "nullable": true
          },
          "fioriHidden": {
            "type": "boolean",
            "nullable": true
          },
          "IsActiveEntity": {
            "type": "boolean",
            "default": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          },
          "DraftAdministrativeData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/main.DraftAdministrativeData"
              }
            ],
            "nullable": true
          },
          "SiblingEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/main.incident"
              }
            ],
            "nullable": true
          }
        }
      },
      "main.incident-create": {
        "title": "incident (for create)",
        "type": "object",
        "properties": {
          "ticketType_code": {
            "type": "string",
            "maxLength": 1,
            "nullable": true
          },
          "subaccount": {
            "type": "string",
            "nullable": true
          },
          "targetid_email": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "system": {
            "type": "string",
            "maxLength": 3,
            "nullable": true
          },
          "client": {
            "type": "string",
            "maxLength": 3,
            "nullable": true
          },
          "btpHidden": {
            "type": "boolean",
            "nullable": true
          },
          "fioriHidden": {
            "type": "boolean",
            "nullable": true
          },
          "IsActiveEntity": {
            "type": "boolean",
            "default": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          },
          "DraftAdministrativeData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/main.DraftAdministrativeData-create"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "IsActiveEntity",
          "note"
        ]
      },
      "main.incident-update": {
        "title": "incident (for update)",
        "type": "object",
        "properties": {
          "subaccount": {
            "type": "string",
            "nullable": true
          },
          "targetid_email": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "system": {
            "type": "string",
            "maxLength": 3,
            "nullable": true
          },
          "client": {
            "type": "string",
            "maxLength": 3,
            "nullable": true
          },
          "btpHidden": {
            "type": "boolean",
            "nullable": true
          },
          "fioriHidden": {
            "type": "boolean",
            "nullable": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "main.status": {
        "title": "status",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "maxLength": 1
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "main.status-create": {
        "title": "status (for create)",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "maxLength": 1
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "code"
        ]
      },
      "main.status-update": {
        "title": "status (for update)",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "main.subaccount": {
        "title": "subaccount",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "main.subaccount-create": {
        "title": "subaccount (for create)",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "displayName"
        ]
      },
      "main.subaccount-update": {
        "title": "subaccount (for update)",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "main.ticketType": {
        "title": "ticketType",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "maxLength": 1
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "main.ticketType-create": {
        "title": "ticketType (for create)",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "maxLength": 1
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "code"
        ]
      },
      "main.ticketType-update": {
        "title": "ticketType (for update)",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "count": {
        "anyOf": [
          {
            "type": "number"
          },
          {
            "type": "string"
          }
        ],
        "description": "The number of entities in the collection. Available when using the [$count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount) query option."
      },
      "error": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "code",
              "message"
            ],
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "target": {
                "type": "string"
              },
              "details": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "target": {
                      "type": "string"
                    }
                  }
                }
              },
              "innererror": {
                "type": "object",
                "description": "The structure of this object is service-specific"
              }
            }
          }
        }
      }
    },
    "parameters": {
      "top": {
        "name": "$top",
        "in": "query",
        "description": "Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)",
        "schema": {
          "type": "integer",
          "minimum": 0
        },
        "example": 50
      },
      "skip": {
        "name": "$skip",
        "in": "query",
        "description": "Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)",
        "schema": {
          "type": "integer",
          "minimum": 0
        }
      },
      "count": {
        "name": "$count",
        "in": "query",
        "description": "Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)",
        "schema": {
          "type": "boolean"
        }
      },
      "search": {
        "name": "$search",
        "in": "query",
        "description": "Search items by search phrases, see [Searching](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionsearch)",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "error": {
        "description": "Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      }
    }
  }
}